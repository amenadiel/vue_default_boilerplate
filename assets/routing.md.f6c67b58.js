import{_ as e,c as t,o as a,a as r}from"./app.9b700571.js";const g='{"title":"\u{1F50C} Routing Strategy","description":"","frontmatter":{},"headers":[{"level":3,"title":"Scenario: prefix + transformation","slug":"scenario-prefix-transformation"},{"level":3,"title":"Scenario: no prefix, no transformation","slug":"scenario-no-prefix-no-transformation"},{"level":2,"title":"Transformation vs searchParams","slug":"transformation-vs-searchparams"}],"relativePath":"routing.md","lastUpdated":1638756252066}',o={},n=r('<h1 id="\u{1F50C}-routing-strategy" tabindex="-1">\u{1F50C} Routing Strategy <a class="header-anchor" href="#\u{1F50C}-routing-strategy" aria-hidden="true">#</a></h1><p>Edge Resizer will try to infer the source image&#39;s URL by taking into account, in the first place, an optional route prefix (see <a href="./deploy.html">deploy</a>), then a regular expression matching the pattern of <a href="./transformations.html">available transformations</a>.</p><p>In the following scenarios, the source image is:</p><blockquote><p><strong><a href="https://riff.one/images/designcue-unsplash.jpg" target="_blank" rel="noopener noreferrer">https://riff.one/images/designcue-unsplash.jpg</a></strong></p></blockquote><h3 id="scenario-prefix-transformation" tabindex="-1">Scenario: prefix + transformation <a class="header-anchor" href="#scenario-prefix-transformation" aria-hidden="true">#</a></h3><p>When both are present, <strong>make sure the prefix comes before the transformation part</strong></p><table><thead><tr><th><em>worker subdomain</em></th><th><em>prefix or transformation</em></th><th><em>origin hostname</em></th><th><em>origin pathname</em></th></tr></thead><tbody><tr><td><code>zone/</code></td><td><code>img/w=300_h=200</code></td><td><code>/riff.one</code></td><td><code>/images/designcue-unsplash.jpg</code></td></tr><tr><td><code>zone/</code></td><td><code>img</code></td><td><code>/riff.one</code></td><td><code>/images/designcue-unsplash.jpg</code></td></tr><tr><td><code>zone/</code></td><td><code>w=300_h=200</code></td><td><code>/riff.one</code></td><td><code>/images/designcue-unsplash.jpg</code></td></tr><tr><td><code>zone/</code></td><td><code>w=300_h=200/img</code></td><td><code>/riff.one</code></td><td><span style="color:red;"><span style="margin:-0.5em 1em -0.2em 0;font-size:2em;padding:0;float:left;">\u{1F622}</span> won&#39;t work</span></td></tr></tbody></table><p>The last URL wouldn&#39;t work. The prefix must come before the transformation part. Otherwise it would be <strong>postfix</strong>.</p><h3 id="scenario-no-prefix-no-transformation" tabindex="-1">Scenario: no prefix, no transformation <a class="header-anchor" href="#scenario-no-prefix-no-transformation" aria-hidden="true">#</a></h3><p>If neither is found, Edge Resizer will ultimately forward the request, unmodified. This might be ok if you&#39;re using Edge-Resizer as part of an existing site. If this is unintended, you can ensure the URL is treated as an image by passing an underscore as dummy prefix:</p><table><thead><tr><th><em>worker subdomain</em></th><th><em>prefix or transformation</em></th><th><em>origin hostname</em></th><th><em>origin pathname</em></th></tr></thead><tbody><tr><td><code>zone/</code></td><td><code>_</code></td><td><code>/riff.one</code></td><td><code>/images/designcue-unsplash.jpg</code></td></tr></tbody></table><h2 id="transformation-vs-searchparams" tabindex="-1">Transformation vs searchParams <a class="header-anchor" href="#transformation-vs-searchparams" aria-hidden="true">#</a></h2><p>Internally, requested transformations are translated to searchParams as expected by <a href="https://img.weserv.nl" target="_blank" rel="noopener noreferrer">img.weserv.nl</a>. You can pass said searchParams directly and they&#39;ll be forwarded accordingly.</p><div class="info custom-block"><p class="custom-block-title">\u{1F4A1} The following are equivalent</p><p><a href="https://img.ctohm.com/_/riff.one/images/designcue-unsplash.jpg?ch=150&amp;w=700" target="_blank" rel="noopener noreferrer">https://img.ctohm.com/_/riff.one/images/designcue-unsplash.jpg?ch=150&amp;w=700</a></p><p><a href="https://img.ctohm.com/ch=150_w=700/riff.one/images/designcue-unsplash.jpg" target="_blank" rel="noopener noreferrer">https://img.ctohm.com/ch=150_w=700/riff.one/images/designcue-unsplash.jpg</a></p></div><div style="margin:0 auto;"><img src="https://img.ctohm.com/ch=150_w=700/riff.one/images/designcue-unsplash.jpg"><p><sup style="margin:-1em auto 1em;width:100%;display:block;text-align:center;">Photo by drmakete lab on Unsplash</sup></p></div><p>This is the only way in which some transformations detailed on <a href="https://images.weserv.nl/docs/" target="_blank" rel="noopener noreferrer">images.weserv.nl docs</a>, which we don&#39;t explicitly consider, can be applied to your images.</p><hr><p>You might wonder: &quot;<em>why not just use the searchParams and forget about routing?</em>&quot;. Well: There was <strong><a href="./use_cases.html">\u{1F4A5} a very practical reason</a></strong> to implement our routing logic. But having compact and tidy URLs is nice by itself, isn&#39;t it?</p>',18),s=[n];function i(d,c,h,m,p,l){return a(),t("div",null,s)}var u=e(o,[["render",i]]);export{g as __pageData,u as default};
