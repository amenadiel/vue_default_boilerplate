import{_ as e,c as o,o as t,a}from"./app.9b700571.js";const g='{"title":"\u{1F4E6} Deploy","description":"","frontmatter":{},"relativePath":"deploy.md","lastUpdated":1638756736726}',r={},c=a(`__VP_STATIC_START__<h1 id="package-deploy" tabindex="-1">\u{1F4E6} Deploy <a class="header-anchor" href="#package-deploy" aria-hidden="true">#</a></h1><p><strong>Edge Resizer can be deployed on your (sub)domain</strong>. Just clone the repo, copy <code>wrangler.example.toml</code> as <code>wrangler.toml</code> replacing the placeholders <code>YOUR_ACCOUNT_ID</code>, <code>YOUR_ZONE_ID</code>, <code>TOUR_CF_TOKEN</code> and the route (or routes) accordignly.</p><hr><p>You&#39;d probably want to have Edge-Resizer handle requests matching a particular path prefix (say <code>/img</code> o <code>/thumbnails</code>) instead of the whole (sub)domain.</p><p>If that&#39;s the case, please change the <code>ROUTE_PREFIX</code> variable in <code>wrangler.toml</code>, to match the former, including the leading slash.</p><p>The URL of the image you want to proxy should be appended right after the (optional) prefix</p><div class="language-"><pre><code> https://&lt;your_subdomain&gt; / &lt;prefix&gt;? / &lt;source domain&gt; / &lt;source pathname&gt;
</code></pre></div><p>By default, the worker doesn&#39;t define a prefix, which means it&#39;ll try to match any route satisfying the <a href="./routing.html">routing logic</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To prevent unwanted routes to be &quot;intercepted&quot; by the worker, narrow its scope using <code>ROUTE_PREFIX</code></p></div><div class="tip custom-block"><p class="custom-block-title">another tip</p><p>To ensure a given route is handled by the worker when not using a prefix or a transformation, use <code>_</code> as dummy prefix</p></div>__VP_STATIC_END__`,10),d=[c];function s(n,i,p,l,h,u){return t(),o("div",null,d)}var m=e(r,[["render",s]]);export{g as __pageData,m as default};
